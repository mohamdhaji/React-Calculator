{"version":3,"sources":["components/Calculator/operation.js","components/Calculator/number.js","components/Calculator/index.js","App.js","index.js"],"names":["Operation","props","onClick","item","className","includes","template","size","getIcon","Number","console","log","Item","isNaN","App","state","temp","screenInput","operation","tracking","tempReset","numbersAndOperations","onChange","e","key","setState","target","value","slice","length","preformOperation","parseFloat","toFixed","clear","toString","num","dir","this","type","map","i","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e2a33f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AiOutlinePercentage as Reminder } from \"react-icons/ai\";\r\nimport { AiOutlineClose as Mul } from \"react-icons/ai\";\r\nimport { RiDivideLine as Div } from \"react-icons/ri\";\r\nimport { FaEquals as Equal } from \"react-icons/fa\";\r\nimport { FaPlus as Plus } from \"react-icons/fa\";\r\nimport { FaMinus as Minus } from \"react-icons/fa\";\r\n\r\nexport default function Operation(props) {\r\n  const lightBlueIndexs = [\"AC\", \"+/-\", \"%\"];\r\n\r\n  let getIcon = (item) => {\r\n    let template = null;\r\n    switch (item) {\r\n      case \"%\":\r\n        template = <Reminder />;\r\n        break;\r\n      case \"*\":\r\n        template = <Mul size=\"20px\" />;\r\n        break;\r\n      case \"/\":\r\n        template = <Div size=\"20px\" />;\r\n        break;\r\n      case \"=\":\r\n        template = <Equal />;\r\n        break;\r\n      case \"+\":\r\n        template = <Plus />;\r\n        break;\r\n      case \"-\":\r\n        template = <Minus />;\r\n        break;\r\n      default:\r\n        template = item;\r\n    }\r\n    return template;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={() => props.onClick(props.item)}\r\n      className={`operation-item ${\r\n        lightBlueIndexs.includes(props.item) ? \"lightBlue\" : null\r\n      }`}\r\n    >\r\n      {getIcon(props.item)}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Number(props) {\r\n  console.log(props.item);\r\n  return (\r\n    <div\r\n      onClick={() => props.onClick(props.item)}\r\n      className={`number-item ${props.item === \"0\" ? \"zero\" : null} ${\r\n        props.item === \".\" ? \"dot\" : null\r\n      }`}\r\n    >\r\n      {props.item}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Operation from \"./operation\";\r\nimport Number from \"./number\";\r\nexport default function Item(props) {\r\n  const getTemplate = () => {\r\n    let template = null;\r\n    if (isNaN(props.item) && props.item !== \".\") {\r\n      template = (\r\n        <Operation onClick={props.onClick} item={props.item}></Operation>\r\n      );\r\n    } else {\r\n      template = <Number onClick={props.onClick} item={props.item}></Number>;\r\n    }\r\n    return template;\r\n  };\r\n\r\n  return <>{getTemplate()}</>;\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./Resources/style.css\";\nimport Item from \"./components/Calculator\";\nexport default class App extends Component {\n  state = {\n    temp: \"0\",\n    screenInput: \"0\",\n    operation: null,\n    tracking: \"\",\n    tempReset: false,\n  };\n  numbersAndOperations = [\n    \"AC\",\n    \"+/-\",\n    \"%\",\n    \"/\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"*\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"-\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"+\",\n    \"0\",\n    \".\",\n    \"=\",\n  ];\n  onChange = (e, key) => {\n    if (key === \"screenInput\") {\n      const num = this.state.screenInput;\n\n      if (num === \"0\" || this.state.tempReset) {\n        this.setState({\n          screenInput: e.target.value.slice(\n            e.target.value.length - 1,\n            e.target.value.length\n          ),\n          tempReset: false,\n        });\n      } else {\n        this.setState({ screenInput: e.target.value });\n      }\n    }\n  };\n\n  preformOperation = (operation) => {\n    if (operation) {\n      let temp;\n      switch (operation) {\n        case \"+\":\n          temp = (\n            parseFloat(this.state.temp) + parseFloat(this.state.screenInput)\n          ).toFixed(2);\n          break;\n        case \"-\":\n          temp = (\n            parseFloat(this.state.temp) - parseFloat(this.state.screenInput)\n          ).toFixed(2);\n          break;\n        case \"*\":\n          temp = (\n            parseFloat(this.state.temp) * parseFloat(this.state.screenInput)\n          ).toFixed(2);\n          break;\n        case \"/\":\n          temp = (\n            parseFloat(this.state.temp) / parseFloat(this.state.screenInput)\n          ).toFixed(2);\n          break;\n        case \"%\":\n          temp = (\n            parseFloat(this.state.temp) % parseFloat(this.state.screenInput)\n          ).toFixed(2);\n          break;\n        default:\n          temp = \"0\";\n      }\n      return temp;\n    } else {\n      return this.state.screenInput;\n    }\n  };\n\n  clear = () => {\n    this.setState({\n      temp: \"0\",\n      screenInput: \"0\",\n      operation: null,\n      tracking: \"\",\n      tempReset: false,\n    });\n  };\n\n  onClick = (item) => {\n    if (isNaN(item) && item !== \".\") {\n      if (item === \"=\") {\n        let temp = this.preformOperation(this.state.operation);\n\n        this.setState({\n          screenInput: temp.toString(),\n          temp: temp.toString(),\n          operation: null,\n          tempReset: true,\n        });\n      } else if (item !== \"AC\") {\n        if (!this.state.tempReset) {\n          let temp = this.preformOperation(this.state.operation);\n          this.setState({\n            temp: temp.toString(),\n            operation: item,\n            // tracking: item + \" \" + this.state.screenInput,\n            screenInput: temp.toString(),\n            tempReset: true,\n          });\n        } else {\n          this.setState({ operation: item });\n        }\n      } else {\n        this.clear();\n      }\n    } else {\n      let num = this.state.screenInput;\n      if (!this.state.operation) {\n        this.setState({ temp: \"0\" });\n      }\n      if (num === \"0\" || this.state.tempReset) {\n        this.setState({ screenInput: item, tempReset: false });\n      } else {\n        if (item === \".\")\n          this.setState({ screenInput: item + this.state.screenInput });\n        else this.setState({ screenInput: this.state.screenInput + item });\n      }\n    }\n  };\n  render() {\n    return (\n      <div className=\"calculator\">\n        <div dir=\"rtl\" className=\"input-tracking\">\n          {this.state.tracking}\n        </div>\n        <input\n          dir=\"rtl\"\n          value={this.state.screenInput}\n          onChange={(e) => this.onChange(e, \"screenInput\")}\n          type=\"text\"\n          className=\"screen-input\"\n        />\n        <div className=\"control-container\">\n          {this.numbersAndOperations.map((item, i) => {\n            return <Item onClick={this.onClick} key={i} item={item} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}